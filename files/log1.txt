"C:\Program Files\Java\jdk-19\bin\java.exe" -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\lib\idea_rt.jar=6475:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\bin" -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath "C:\Users\nikez\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.2\junit-platform-launcher-1.8.2.jar;C:\Users\nikez\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\plugins\junit\lib\junit-rt.jar;C:\projects\job4j_cars\target\test-classes;C:\projects\job4j_cars\target\classes;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.7.4\spring-boot-starter-thymeleaf-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.4\spring-boot-starter-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.4\spring-boot-starter-logging-2.7.4.jar;C:\Users\nikez\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\nikez\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\nikez\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\nikez\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\nikez\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\nikez\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\nikez\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\nikez\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\nikez\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\nikez\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\nikez\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nikez\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\nikez\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.4\spring-boot-starter-web-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.4\spring-boot-starter-json-2.7.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.4\jackson-databind-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.4\jackson-annotations-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.4\jackson-core-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.4\jackson-datatype-jdk8-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.4\jackson-datatype-jsr310-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.4\jackson-module-parameter-names-2.13.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.4\spring-boot-starter-tomcat-2.7.4.jar;C:\Users\nikez\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.65\tomcat-embed-core-9.0.65.jar;C:\Users\nikez\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.65\tomcat-embed-el-9.0.65.jar;C:\Users\nikez\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.65\tomcat-embed-websocket-9.0.65.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-web\5.3.23\spring-web-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-webmvc\5.3.23\spring-webmvc-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.4\spring-boot-devtools-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot\2.7.4\spring-boot-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.4\spring-boot-autoconfigure-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.7.4\spring-boot-starter-test-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-test\2.7.4\spring-boot-test-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.4\spring-boot-test-autoconfigure-2.7.4.jar;C:\Users\nikez\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nikez\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\nikez\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\nikez\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\nikez\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\nikez\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\nikez\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.2\junit-jupiter-params-5.8.2.jar;C:\Users\nikez\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;C:\Users\nikez\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nikez\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-test\5.3.23\spring-test-5.3.23.jar;C:\Users\nikez\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\nikez\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\nikez\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;C:\Users\nikez\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nikez\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\nikez\.m2\repository\org\assertj\assertj-core\3.14.0\assertj-core-3.14.0.jar;C:\Users\nikez\.m2\repository\org\mockito\mockito-core\3.5.13\mockito-core-3.5.13.jar;C:\Users\nikez\.m2\repository\net\bytebuddy\byte-buddy\1.12.17\byte-buddy-1.12.17.jar;C:\Users\nikez\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.17\byte-buddy-agent-1.12.17.jar;C:\Users\nikez\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar;C:\Users\nikez\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\nikez\.m2\repository\org\apache\commons\commons-dbcp2\2.7.0\commons-dbcp2-2.7.0.jar;C:\Users\nikez\.m2\repository\org\apache\commons\commons-pool2\2.11.1\commons-pool2-2.11.1.jar;C:\Users\nikez\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\nikez\.m2\repository\org\postgresql\postgresql\42.5.1\postgresql-42.5.1.jar;C:\Users\nikez\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\nikez\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nikez\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\nikez\.m2\repository\org\hibernate\hibernate-core\5.6.11.Final\hibernate-core-5.6.11.Final.jar;C:\Users\nikez\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\nikez\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\nikez\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\nikez\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\nikez\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nikez\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nikez\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\nikez\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\nikez\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\nikez\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\nikez\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\nikez\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\nikez\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 ru.job4j.cars.model.repository.PostRepositoryTest,whenCreateFindAllWithPhotoDelete
23:58:54.344 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
23:58:54.383 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
23:58:54.388 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
23:58:54.398 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
23:58:54.453 [main] INFO org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.11.Final
23:58:54.458 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
23:58:55.039 [main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
23:58:55.042 [main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized alternate hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
23:58:55.053 [main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
23:58:55.661 [main] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
23:58:55.702 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
23:58:55.705 [main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
23:58:55.761 [main] INFO org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
23:58:55.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4c4d362a
23:58:55.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4c4d362a
23:58:55.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c4d362a
23:58:55.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8ab78bc
23:58:55.992 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7fe083b1
23:58:55.993 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f7d1d2
23:58:55.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3174cb09
23:58:55.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3174cb09
23:58:55.996 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3174cb09
23:58:55.998 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@352c308
23:58:55.998 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@352c308
23:58:55.998 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@352c308
23:58:56.000 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@fff25f1
23:58:56.000 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@fff25f1
23:58:56.001 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fff25f1
23:58:56.003 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@b93aad
23:58:56.003 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@b93aad
23:58:56.003 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b93aad
23:58:56.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3a0807b7
23:58:56.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3a0807b7
23:58:56.006 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3a0807b7
23:58:56.008 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5489c777
23:58:56.008 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5489c777
23:58:56.008 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5489c777
23:58:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@158d255c
23:58:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@158d255c
23:58:56.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@158d255c
23:58:56.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@672f11c2
23:58:56.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@672f11c2
23:58:56.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4fbdc0f0
23:58:56.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4fbdc0f0
23:58:56.016 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@aec50a1
23:58:56.017 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@aec50a1
23:58:56.018 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a0e1b5e
23:58:56.019 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7646731d
23:58:56.021 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@62da83ed
23:58:56.021 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62da83ed
23:58:56.023 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@408b35bf
23:58:56.024 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@408b35bf
23:58:56.026 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@649f2009
23:58:56.026 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@649f2009
23:58:56.029 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c4f9535
23:58:56.029 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c4f9535
23:58:56.031 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@344344fa
23:58:56.031 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@344344fa
23:58:56.033 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1827a871
23:58:56.033 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1827a871
23:58:56.036 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@750fe12e
23:58:56.036 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@750fe12e
23:58:56.039 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7544a1e4
23:58:56.039 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7544a1e4
23:58:56.043 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be82d43
23:58:56.043 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be82d43
23:58:56.046 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@133e019b
23:58:56.046 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@133e019b
23:58:56.049 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@51684e4a
23:58:56.049 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51684e4a
23:58:56.051 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@372b0d86
23:58:56.052 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@372b0d86
23:58:56.052 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@372b0d86
23:58:56.055 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e9658b5
23:58:56.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5528a42c
23:58:56.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5528a42c
23:58:56.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5528a42c
23:58:56.059 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cc62a3b
23:58:56.061 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@51a06cbe
23:58:56.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@52c8295b
23:58:56.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@52c8295b
23:58:56.066 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@22680f52
23:58:56.066 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@22680f52
23:58:56.068 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fc793c2
23:58:56.068 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fc793c2
23:58:56.070 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@37d3d232
23:58:56.070 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37d3d232
23:58:56.072 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46cf05f7
23:58:56.072 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46cf05f7
23:58:56.073 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3caa4757
23:58:56.076 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3e2fc448
23:58:56.076 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2fc448
23:58:56.076 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3e2fc448
23:58:56.078 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7048f722
23:58:56.079 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7048f722
23:58:56.079 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7048f722
23:58:56.081 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3c291aad
23:58:56.082 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@320e400
23:58:56.084 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@436390f4
23:58:56.085 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@436390f4
23:58:56.085 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@436390f4
23:58:56.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@255990cc
23:58:56.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@255990cc
23:58:56.087 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@255990cc
23:58:56.088 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@40e4ea87
23:58:56.089 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@62c5bbdc
23:58:56.093 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2fa7ae9
23:58:56.093 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2fa7ae9
23:58:56.094 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60afd40d
23:58:56.098 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@24855019
23:58:56.098 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@24855019
23:58:56.102 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7bd69e82
23:58:56.102 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7bd69e82
23:58:56.103 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27dc79f7
23:58:56.104 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18e8473e
23:58:56.107 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6f6a7463
23:58:56.115 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3a45c42a
23:58:56.115 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a45c42a
23:58:56.116 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27a0a5a2
23:58:56.116 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7692cd34
23:58:56.116 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33aa93c
23:58:56.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32c0915e
23:58:56.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@106faf11
23:58:56.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70f43b45
23:58:56.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26d10f2e
23:58:56.117 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10ad20cb
23:58:56.188 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
23:58:56.189 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
23:58:56.193 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
23:58:56.193 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
23:58:56.194 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
23:58:56.197 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
23:58:56.198 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
23:58:56.200 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
23:58:56.202 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
23:58:56.204 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
23:58:56.205 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
23:58:56.206 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
23:58:56.206 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
23:58:56.208 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
23:58:56.221 [main] WARN org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
23:58:56.227 [main] INFO org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./testdb;MODE=PostgreSQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE;]
23:58:56.228 [main] INFO org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=, user=}
23:58:56.228 [main] INFO org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
23:58:56.237 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
23:58:56.237 [main] INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 1 (min=1)
23:58:56.972 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
23:58:56.973 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
23:58:56.973 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
23:58:57.007 [main] INFO org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
23:58:57.133 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26a2f7f9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38eb2c50]
23:58:57.297 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
23:58:57.327 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.User
23:58:57.372 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.388 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name User
23:58:57.395 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.User on table auto_user
23:58:57.446 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.451 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.User] is safe
23:58:57.451 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.User
23:58:57.453 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.456 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.User:id]
23:58:57.462 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.467 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.475 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.476 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_user), mappingColumn=login, insertable=true, updatable=true, unique=false}
23:58:57.476 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property login with lazy=false
23:58:57.477 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.User:login]
23:58:57.477 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for login
23:58:57.477 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property login
23:58:57.478 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
23:58:57.478 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property password with lazy=false
23:58:57.478 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.User:password]
23:58:57.478 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for password
23:58:57.479 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property password
23:58:57.493 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.Post
23:58:57.493 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.494 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Post
23:58:57.494 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.Post on table auto_post
23:58:57.560 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.560 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Post] is safe
23:58:57.560 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Post
23:58:57.561 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.561 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Post:id]
23:58:57.561 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.561 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.561 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.564 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='car_id', referencedColumn='', mappedBy=''}
23:58:57.565 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=car, insertable=true, updatable=true, unique=false}
23:58:57.572 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property car
23:58:57.574 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=created, insertable=true, updatable=true, unique=false}
23:58:57.577 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property created with lazy=false
23:58:57.577 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Post:created]
23:58:57.577 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for created
23:58:57.577 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property created
23:58:57.582 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=null, insertable=true, updatable=true, unique=false}
23:58:57.603 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=element, insertable=true, updatable=true, unique=false}
23:58:57.604 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=participates_KEY, insertable=true, updatable=true, unique=false}
23:58:57.607 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='participates_KEY', referencedColumn='null', mappedBy='null'}
23:58:57.609 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
23:58:57.609 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
23:58:57.610 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: ru.job4j.cars.model.Post.participates
23:58:57.615 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property participates
23:58:57.616 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
23:58:57.617 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=photos, insertable=true, updatable=true, unique=false}
23:58:57.618 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=null, insertable=true, updatable=true, unique=false}
23:58:57.619 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=element, insertable=true, updatable=true, unique=false}
23:58:57.619 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=photos_KEY, insertable=true, updatable=true, unique=false}
23:58:57.619 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='photos_KEY', referencedColumn='null', mappedBy='null'}
23:58:57.620 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
23:58:57.620 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
23:58:57.621 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: ru.job4j.cars.model.Post.photos
23:58:57.621 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property photos
23:58:57.621 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='auto_post_id', referencedColumn='', mappedBy=''}
23:58:57.622 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=priceHistories, insertable=true, updatable=true, unique=false}
23:58:57.622 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=null, insertable=true, updatable=true, unique=false}
23:58:57.622 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=element, insertable=true, updatable=true, unique=false}
23:58:57.623 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=priceHistories_KEY, insertable=true, updatable=true, unique=false}
23:58:57.628 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='priceHistories_KEY', referencedColumn='null', mappedBy='null'}
23:58:57.628 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
23:58:57.629 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
23:58:57.629 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: ru.job4j.cars.model.Post.priceHistories
23:58:57.629 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property priceHistories
23:58:57.630 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=_text, insertable=true, updatable=true, unique=false}
23:58:57.630 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property text with lazy=false
23:58:57.630 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Post:text]
23:58:57.631 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for text
23:58:57.631 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property text
23:58:57.631 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='auto_user_id', referencedColumn='', mappedBy=''}
23:58:57.631 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(auto_post), mappingColumn=user, insertable=true, updatable=true, unique=false}
23:58:57.632 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property user
23:58:57.637 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.PriceHistory
23:58:57.638 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.638 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name PriceHistory
23:58:57.642 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.PriceHistory on table price_history
23:58:57.643 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(price_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.643 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.PriceHistory] is safe
23:58:57.643 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.PriceHistory
23:58:57.643 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.643 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.PriceHistory:id]
23:58:57.643 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.644 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.644 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.644 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(price_history), mappingColumn=after, insertable=true, updatable=true, unique=false}
23:58:57.644 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property after with lazy=false
23:58:57.644 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.PriceHistory:after]
23:58:57.644 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for after
23:58:57.644 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property after
23:58:57.645 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(price_history), mappingColumn=before, insertable=true, updatable=true, unique=false}
23:58:57.645 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property before with lazy=false
23:58:57.645 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.PriceHistory:before]
23:58:57.645 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for before
23:58:57.645 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property before
23:58:57.645 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(price_history), mappingColumn=created, insertable=true, updatable=true, unique=false}
23:58:57.645 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property created with lazy=false
23:58:57.645 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.PriceHistory:created]
23:58:57.646 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for created
23:58:57.646 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property created
23:58:57.647 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.Car
23:58:57.647 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.647 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Car
23:58:57.647 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.Car on table car
23:58:57.649 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(car), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.650 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Car] is safe
23:58:57.650 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Car
23:58:57.650 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.650 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Car:id]
23:58:57.650 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.650 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.651 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.651 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='engine_id', referencedColumn='', mappedBy=''}
23:58:57.651 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(car), mappingColumn=engine, insertable=true, updatable=true, unique=false}
23:58:57.651 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property engine
23:58:57.651 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(car), mappingColumn=name, insertable=true, updatable=true, unique=false}
23:58:57.652 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
23:58:57.652 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Car:name]
23:58:57.652 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
23:58:57.652 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
23:58:57.652 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(car), mappingColumn=null, insertable=true, updatable=true, unique=false}
23:58:57.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(car), mappingColumn=element, insertable=true, updatable=true, unique=false}
23:58:57.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(car), mappingColumn=owners_KEY, insertable=true, updatable=true, unique=false}
23:58:57.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='owners_KEY', referencedColumn='null', mappedBy='null'}
23:58:57.653 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='car_id', referencedColumn='', mappedBy=''}
23:58:57.654 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='driver_id', referencedColumn='', mappedBy=''}
23:58:57.654 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Collection role: ru.job4j.cars.model.Car.owners
23:58:57.654 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property owners
23:58:57.656 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.Engine
23:58:57.656 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.656 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Engine
23:58:57.656 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.Engine on table engine
23:58:57.657 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(engine), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.660 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Engine] is safe
23:58:57.660 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Engine
23:58:57.660 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.660 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Engine:id]
23:58:57.660 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.661 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.661 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.661 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(engine), mappingColumn=name, insertable=true, updatable=true, unique=false}
23:58:57.661 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
23:58:57.661 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Engine:name]
23:58:57.661 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
23:58:57.662 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
23:58:57.663 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.Driver
23:58:57.663 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.663 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Driver
23:58:57.663 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.Driver on table driver
23:58:57.665 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(driver), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.665 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Driver] is safe
23:58:57.665 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Driver
23:58:57.665 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.665 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Driver:id]
23:58:57.665 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.666 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.666 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.666 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(driver), mappingColumn=name, insertable=true, updatable=true, unique=false}
23:58:57.666 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
23:58:57.666 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Driver:name]
23:58:57.667 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
23:58:57.667 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
23:58:57.667 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
23:58:57.667 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(driver), mappingColumn=user, insertable=true, updatable=true, unique=false}
23:58:57.667 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property user
23:58:57.668 [main] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: ru.job4j.cars.model.Photo
23:58:57.669 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
23:58:57.669 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Photo
23:58:57.669 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity ru.job4j.cars.model.Photo on table photo
23:58:57.671 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=id, insertable=true, updatable=true, unique=false}
23:58:57.671 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Photo] is safe
23:58:57.671 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Photo
23:58:57.671 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
23:58:57.671 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Photo:id]
23:58:57.671 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
23:58:57.671 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property id
23:58:57.672 [main] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
23:58:57.672 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
23:58:57.672 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property fileName with lazy=false
23:58:57.672 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Photo:fileName]
23:58:57.672 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for fileName
23:58:57.672 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property fileName
23:58:57.673 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=name, insertable=true, updatable=true, unique=false}
23:58:57.673 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
23:58:57.673 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Photo:name]
23:58:57.673 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
23:58:57.673 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property name
23:58:57.674 [main] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(photo), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
23:58:57.674 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property postId with lazy=false
23:58:57.674 [main] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ru.job4j.cars.model.Photo:postId]
23:58:57.674 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for postId
23:58:57.674 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property postId
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for login
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for password
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for created
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for text
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for after
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for before
23:58:57.678 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for created
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for fileName
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
23:58:57.679 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for postId
23:58:57.689 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [auto_user]
23:58:57.689 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [auto_post]
23:58:57.689 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [price_history]
23:58:57.689 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [car]
23:58:57.689 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [engine]
23:58:57.689 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [driver]
23:58:57.690 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photo]
23:58:57.690 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: ru.job4j.cars.model.Car.owners
23:58:57.690 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding as ManyToMany: ru.job4j.cars.model.Car.owners
23:58:57.696 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [car_id] to be non-null as it is part of the primary key for table [history_owner]
23:58:57.697 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [driver_id] to be non-null as it is part of the primary key for table [history_owner]
23:58:57.697 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: car_id, element: driver_id
23:58:57.697 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: ru.job4j.cars.model.Post.priceHistories
23:58:57.697 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: ru.job4j.cars.model.Post.priceHistories through a foreign key
23:58:57.698 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: ru.job4j.cars.model.Post.priceHistories -> price_history
23:58:57.698 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: auto_post_id, one-to-many: ru.job4j.cars.model.PriceHistory
23:58:57.698 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: ru.job4j.cars.model.Post.photos
23:58:57.698 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding a OneToMany: ru.job4j.cars.model.Post.photos through a foreign key
23:58:57.698 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Mapping collection: ru.job4j.cars.model.Post.photos -> photo
23:58:57.699 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: post_id, one-to-many: ru.job4j.cars.model.Photo
23:58:57.699 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Second pass for collection: ru.job4j.cars.model.Post.participates
23:58:57.699 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder - Binding as ManyToMany: ru.job4j.cars.model.Post.participates
23:58:57.700 [main] DEBUG org.hibernate.cfg.CollectionSecondPass - Mapped collection key: post_id, element: user_id
23:58:57.701 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Car
23:58:57.707 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.User
23:58:57.708 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Engine
23:58:57.709 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.User
23:58:57.709 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Driver
23:58:57.709 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Car
23:58:57.709 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.User
23:58:57.710 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Post
23:58:57.710 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Post
23:58:57.710 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Post
23:58:57.714 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Car
23:58:57.714 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.User
23:58:57.714 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Engine
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.User
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Driver
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Car
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.User
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Post
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Post
23:58:57.715 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: ru.job4j.cars.model.Post
23:58:57.806 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
23:58:57.808 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
23:58:57.809 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
23:58:57.809 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
23:58:57.810 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
23:58:57.810 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
23:58:57.810 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
23:58:57.810 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
23:58:57.811 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
23:58:57.812 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
23:58:57.812 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
23:58:57.812 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
23:58:57.812 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
23:58:57.813 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
23:58:57.813 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
23:58:57.813 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
23:58:57.813 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
23:58:57.813 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
23:58:57.813 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
23:58:57.814 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
23:58:57.814 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
23:58:57.814 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
23:58:57.814 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
23:58:57.816 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
23:58:57.959 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
23:58:57.961 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
23:58:57.997 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
23:58:57.997 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=19, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\nikez\.m2\repository\org\junit\platform\junit-platform-launcher\1.8.2\junit-platform-launcher-1.8.2.jar;C:\Users\nikez\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\plugins\junit\lib\junit-rt.jar;C:\projects\job4j_cars\target\test-classes;C:\projects\job4j_cars\target\classes;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.7.4\spring-boot-starter-thymeleaf-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.4\spring-boot-starter-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.4\spring-boot-starter-logging-2.7.4.jar;C:\Users\nikez\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\nikez\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\nikez\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\nikez\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\nikez\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\nikez\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\nikez\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\nikez\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\nikez\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\nikez\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\nikez\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nikez\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\nikez\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.4\spring-boot-starter-web-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.4\spring-boot-starter-json-2.7.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.4\jackson-databind-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.4\jackson-annotations-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.4\jackson-core-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.4\jackson-datatype-jdk8-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.4\jackson-datatype-jsr310-2.13.4.jar;C:\Users\nikez\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.4\jackson-module-parameter-names-2.13.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.4\spring-boot-starter-tomcat-2.7.4.jar;C:\Users\nikez\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.65\tomcat-embed-core-9.0.65.jar;C:\Users\nikez\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.65\tomcat-embed-el-9.0.65.jar;C:\Users\nikez\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.65\tomcat-embed-websocket-9.0.65.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-web\5.3.23\spring-web-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-webmvc\5.3.23\spring-webmvc-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.4\spring-boot-devtools-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot\2.7.4\spring-boot-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.4\spring-boot-autoconfigure-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.7.4\spring-boot-starter-test-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-test\2.7.4\spring-boot-test-2.7.4.jar;C:\Users\nikez\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.4\spring-boot-test-autoconfigure-2.7.4.jar;C:\Users\nikez\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nikez\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\nikez\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\nikez\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\nikez\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\nikez\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\nikez\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.2\junit-jupiter-params-5.8.2.jar;C:\Users\nikez\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;C:\Users\nikez\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nikez\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;C:\Users\nikez\.m2\repository\org\springframework\spring-test\5.3.23\spring-test-5.3.23.jar;C:\Users\nikez\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\nikez\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\nikez\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;C:\Users\nikez\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nikez\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\nikez\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\nikez\.m2\repository\org\assertj\assertj-core\3.14.0\assertj-core-3.14.0.jar;C:\Users\nikez\.m2\repository\org\mockito\mockito-core\3.5.13\mockito-core-3.5.13.jar;C:\Users\nikez\.m2\repository\net\bytebuddy\byte-buddy\1.12.17\byte-buddy-1.12.17.jar;C:\Users\nikez\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.17\byte-buddy-agent-1.12.17.jar;C:\Users\nikez\.m2\repository\org\objenesis\objenesis\3.1\objenesis-3.1.jar;C:\Users\nikez\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\nikez\.m2\repository\org\apache\commons\commons-dbcp2\2.7.0\commons-dbcp2-2.7.0.jar;C:\Users\nikez\.m2\repository\org\apache\commons\commons-pool2\2.11.1\commons-pool2-2.11.1.jar;C:\Users\nikez\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\nikez\.m2\repository\org\postgresql\postgresql\42.5.1\postgresql-42.5.1.jar;C:\Users\nikez\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\nikez\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nikez\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\nikez\.m2\repository\org\hibernate\hibernate-core\5.6.11.Final\hibernate-core-5.6.11.Final.jar;C:\Users\nikez\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\nikez\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\nikez\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\nikez\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\nikez\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nikez\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nikez\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\nikez\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\nikez\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\nikez\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\nikez\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\nikez\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\nikez\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Yekaterinburg, java.vm.specification.version=19, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-19\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 ru.job4j.cars.model.repository.PostRepositoryTest,whenCreateFindAllWithPhotoDelete, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\nikez, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=C:\Program Files\Java\jdk-19, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=nikez, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:h2:./testdb;MODE=PostgreSQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE;, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nikez\AppData\Local\Temp\, java.version=19.0.1, user.dir=C:\projects\job4j_cars, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@799ed4e8, native.encoding=Cp1251, java.library.path=C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\STMicroelectronics\STM32 ST-LINK Utility\ST-LINK Utility;C:\Program Files\Git\cmd;C:\Program Files\PostgreSQL\15\bin;C:\Tools\apache-maven-3.8.6\bin;C:\Tools\curl-7.86.0_2-win64-mingw\bin;"C:\Program Files\Java\jdk-19"\bin;C:\Users\nikez\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.4\bin;;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=63.0}
23:58:58.044 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
23:58:58.046 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
23:58:58.047 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26a2f7f9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41eb94bc]
23:58:58.262 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Engine] is safe
23:58:58.263 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Engine
23:58:58.732 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.737 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.741 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.742 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.742 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Post] is safe
23:58:58.742 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Post
23:58:58.804 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.804 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.804 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.805 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Post#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.806 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Car#engine` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.806 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Car#engine` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.806 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Car] is safe
23:58:58.806 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Car
23:58:58.839 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Car#engine` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.839 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Car#engine` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.840 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Driver#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.840 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Driver#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.840 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Driver] is safe
23:58:58.840 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Driver
23:58:58.869 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Driver#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.870 [main] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `ru.job4j.cars.model.Driver#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
23:58:58.871 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.PriceHistory] is safe
23:58:58.871 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.PriceHistory
23:58:58.911 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.User] is safe
23:58:58.911 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.User
23:58:58.940 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [ru.job4j.cars.model.Photo] is safe
23:58:58.940 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.job4j.cars.model.Photo
23:58:58.999 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: ru.job4j.cars.model.Car.owners
23:58:58.999 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into history_owner (car_id, driver_id) values (?, ?)
23:58:58.999 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update history_owner set driver_id=? where car_id=? and driver_id=?
23:58:58.999 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from history_owner where car_id=? and driver_id=?
23:58:58.999 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from history_owner where car_id=?
23:58:59.003 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: ru.job4j.cars.model.Post.photos
23:58:59.003 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update photo set post_id=? where id=?
23:58:59.003 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update photo set  where id=?
23:58:59.003 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update photo set post_id=null where post_id=? and id=?
23:58:59.003 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update photo set post_id=null where post_id=?
23:58:59.003 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: ru.job4j.cars.model.Post.participates
23:58:59.004 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: insert into participates (post_id, user_id) values (?, ?)
23:58:59.004 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update participates set user_id=? where post_id=? and user_id=?
23:58:59.004 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: delete from participates where post_id=? and user_id=?
23:58:59.004 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: delete from participates where post_id=?
23:58:59.004 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: ru.job4j.cars.model.Post.priceHistories
23:58:59.004 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update price_history set auto_post_id=? where id=?
23:58:59.005 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update price_history set  where id=?
23:58:59.005 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update price_history set auto_post_id=null where auto_post_id=? and id=?
23:58:59.005 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update price_history set auto_post_id=null where auto_post_id=?
23:58:59.014 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.Engine
23:58:59.015 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from engine where id =?
23:58:59.015 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select engine_.id, engine_.name as name2_4_ from engine engine_ where engine_.id=?
23:58:59.015 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into engine (name, id) values (?, ?)
23:58:59.016 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update engine set name=? where id=?
23:58:59.016 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from engine where id=?
23:58:59.016 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into engine (id, name) values (default, ?)
23:58:59.107 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd09e43]
23:58:59.110 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
23:58:59.110 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.140 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.149 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.Engine)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.Engine, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.Engine)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.Engine)
          - SQL table alias mapping - engine0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

23:58:59.153 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.Engine [NONE]: select engine0_.id as id1_4_0_, engine0_.name as name2_4_0_ from engine engine0_ where engine0_.id=?
23:58:59.154 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.Post
23:58:59.154 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from auto_post where id =?
23:58:59.154 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select post_.id, post_.car_id as car_id4_0_, post_.created as created2_0_, post_._text as _text3_0_, post_.auto_user_id as auto_use5_0_ from auto_post post_ where post_.id=?
23:58:59.154 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into auto_post (car_id, created, _text, auto_user_id, id) values (?, ?, ?, ?, ?)
23:58:59.155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update auto_post set car_id=?, created=?, _text=?, auto_user_id=? where id=?
23:58:59.155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from auto_post where id=?
23:58:59.155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into auto_post (id, car_id, created, _text, auto_user_id) values (default, ?, ?, ?, ?)
23:58:59.155 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a6631b]
23:58:59.155 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : car
23:58:59.168 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5482bcac]
23:58:59.172 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : car.engine
23:58:59.172 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a2dc0a]
23:58:59.172 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : car.engine.name
23:58:59.173 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : car.name
23:58:59.173 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : car.owners
23:58:59.174 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60743cdb]
23:58:59.178 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34414ffc]
23:58:59.179 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : created
23:58:59.179 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : participates
23:58:59.179 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b57479]
23:58:59.179 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a33620]
23:58:59.179 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : photos
23:58:59.179 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ea04cab]
23:58:59.179 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134f8ef6]
23:58:59.180 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : priceHistories
23:58:59.180 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a90265a]
23:58:59.180 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a32191e]
23:58:59.180 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : text
23:58:59.180 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user
23:58:59.180 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fbc5e7]
23:58:59.180 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user.login
23:58:59.180 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user.password
23:58:59.180 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.181 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.184 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.Post)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.Post, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.Post)
          - EntityAttributeFetchImpl(entity=ru.job4j.cars.model.Car, querySpaceUid=<gen:1>, path=ru.job4j.cars.model.Post.car)
             - EntityAttributeFetchImpl(entity=ru.job4j.cars.model.Engine, querySpaceUid=<gen:2>, path=ru.job4j.cars.model.Post.car.engine)
             - CollectionAttributeFetchImpl(collection=ru.job4j.cars.model.Car.owners, querySpaceUid=<gen:3>, path=ru.job4j.cars.model.Post.car.owners)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.Driver, querySpaceUid=<gen:4>, path=ru.job4j.cars.model.Post.car.owners.<elements>)
          - CollectionAttributeFetchImpl(collection=ru.job4j.cars.model.Post.participates, querySpaceUid=<gen:5>, path=ru.job4j.cars.model.Post.participates)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.User, querySpaceUid=<gen:6>, path=ru.job4j.cars.model.Post.participates.<elements>)
          - CollectionAttributeFetchImpl(collection=ru.job4j.cars.model.Post.photos, querySpaceUid=<gen:7>, path=ru.job4j.cars.model.Post.photos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.Photo, querySpaceUid=<gen:8>, path=ru.job4j.cars.model.Post.photos.<elements>)
          - CollectionAttributeFetchImpl(collection=ru.job4j.cars.model.Post.priceHistories, querySpaceUid=<gen:9>, path=ru.job4j.cars.model.Post.priceHistories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.PriceHistory, querySpaceUid=<gen:10>, path=ru.job4j.cars.model.Post.priceHistories.<elements>)
          - EntityAttributeFetchImpl(entity=ru.job4j.cars.model.User, querySpaceUid=<gen:11>, path=ru.job4j.cars.model.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(car)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.job4j.cars.model.Car)
                - SQL table alias mapping - car1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(engine)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.job4j.cars.model.Engine)
                      - SQL table alias mapping - engine2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:11>
             - EntityQuerySpaceImpl(uid=<gen:11>, entity=ru.job4j.cars.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_1_3_}

23:58:59.184 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.Post [NONE]: select post0_.id as id1_0_0_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.id as id1_2_1_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, engine2_.id as id1_4_2_, engine2_.name as name2_4_2_, user3_.id as id1_1_3_, user3_.login as login2_1_3_, user3_.password as password3_1_3_ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join engine engine2_ on car1_.engine_id=engine2_.id left outer join auto_user user3_ on post0_.auto_user_id=user3_.id where post0_.id=?
23:58:59.184 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.Car
23:58:59.184 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from car where id =?
23:58:59.184 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select car_.id, car_.engine_id as engine_i3_2_, car_.name as name2_2_ from car car_ where car_.id=?
23:58:59.184 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into car (engine_id, name, id) values (?, ?, ?)
23:58:59.185 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update car set engine_id=?, name=? where id=?
23:58:59.185 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from car where id=?
23:58:59.185 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into car (id, engine_id, name) values (default, ?, ?)
23:58:59.185 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f85217c]
23:58:59.185 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : engine
23:58:59.185 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b202ff]
23:58:59.185 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : engine.name
23:58:59.185 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
23:58:59.185 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : owners
23:58:59.186 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e700eba]
23:58:59.186 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436e181]
23:58:59.186 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.186 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.187 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.Car)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.Car, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.Car)
          - EntityAttributeFetchImpl(entity=ru.job4j.cars.model.Engine, querySpaceUid=<gen:1>, path=ru.job4j.cars.model.Car.engine)
          - CollectionAttributeFetchImpl(collection=ru.job4j.cars.model.Car.owners, querySpaceUid=<gen:2>, path=ru.job4j.cars.model.Car.owners)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.Driver, querySpaceUid=<gen:3>, path=ru.job4j.cars.model.Car.owners.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.Car)
          - SQL table alias mapping - car0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(engine)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.job4j.cars.model.Engine)
                - SQL table alias mapping - engine1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

23:58:59.188 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.Car [NONE]: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:58:59.188 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.Driver
23:58:59.189 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from driver where id =?
23:58:59.189 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select driver_.id, driver_.name as name2_3_, driver_.user_id as user_id3_3_ from driver driver_ where driver_.id=?
23:58:59.189 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into driver (name, user_id, id) values (?, ?, ?)
23:58:59.189 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update driver set name=?, user_id=? where id=?
23:58:59.189 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from driver where id=?
23:58:59.189 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into driver (id, name, user_id) values (default, ?, ?)
23:58:59.189 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7186b202]
23:58:59.189 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
23:58:59.189 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user
23:58:59.190 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ef48f2]
23:58:59.190 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user.login
23:58:59.190 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user.password
23:58:59.190 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.191 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.192 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.Driver)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.Driver, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.Driver)
          - EntityAttributeFetchImpl(entity=ru.job4j.cars.model.User, querySpaceUid=<gen:1>, path=ru.job4j.cars.model.Driver.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.Driver)
          - SQL table alias mapping - driver0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.job4j.cars.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

23:58:59.192 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.Driver [NONE]: select driver0_.id as id1_3_0_, driver0_.name as name2_3_0_, driver0_.user_id as user_id3_3_0_, user1_.id as id1_1_1_, user1_.login as login2_1_1_, user1_.password as password3_1_1_ from driver driver0_ left outer join auto_user user1_ on driver0_.user_id=user1_.id where driver0_.id=?
23:58:59.193 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.PriceHistory
23:58:59.193 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from price_history where id =?
23:58:59.193 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select pricehisto_.id, pricehisto_.after as after2_8_, pricehisto_.before as before3_8_, pricehisto_.created as created4_8_ from price_history pricehisto_ where pricehisto_.id=?
23:58:59.193 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into price_history (after, before, created, id) values (?, ?, ?, ?)
23:58:59.194 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update price_history set after=?, before=?, created=? where id=?
23:58:59.194 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from price_history where id=?
23:58:59.194 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into price_history (id, after, before, created) values (default, ?, ?, ?)
23:58:59.194 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72543547]
23:58:59.194 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : after
23:58:59.194 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : before
23:58:59.194 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : created
23:58:59.194 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.195 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.195 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.PriceHistory)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.PriceHistory, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.PriceHistory)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.PriceHistory)
          - SQL table alias mapping - pricehisto0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

23:58:59.195 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.PriceHistory [NONE]: select pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.id=?
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.User
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from auto_user where id =?
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select user_.id, user_.login as login2_1_, user_.password as password3_1_ from auto_user user_ where user_.id=?
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into auto_user (login, password, id) values (?, ?, ?)
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update auto_user set login=?, password=? where id=?
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from auto_user where id=?
23:58:59.196 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into auto_user (id, login, password) values (default, ?, ?)
23:58:59.196 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bf9122]
23:58:59.196 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : login
23:58:59.196 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
23:58:59.196 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.197 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.197 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.User)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.User, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

23:58:59.198 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.User [NONE]: select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: ru.job4j.cars.model.Photo
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from photo where id =?
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select photo_.id, photo_.file_name as file_nam2_7_, photo_.name as name3_7_, photo_.post_id as post_id4_7_ from photo photo_ where photo_.id=?
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into photo (file_name, name, post_id, id) values (?, ?, ?, ?)
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update photo set file_name=?, name=?, post_id=? where id=?
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from photo where id=?
23:58:59.199 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into photo (id, file_name, name, post_id) values (default, ?, ?, ?)
23:58:59.199 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73afe2b7]
23:58:59.199 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : fileName
23:58:59.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
23:58:59.200 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : postId
23:58:59.200 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.200 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.200 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=ru.job4j.cars.model.Photo)
    - Returns
       - EntityReturnImpl(entity=ru.job4j.cars.model.Photo, querySpaceUid=<gen:0>, path=ru.job4j.cars.model.Photo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.job4j.cars.model.Photo)
          - SQL table alias mapping - photo0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

23:58:59.200 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity ru.job4j.cars.model.Photo [NONE]: select photo0_.id as id1_7_0_, photo0_.file_name as file_nam2_7_0_, photo0_.name as name3_7_0_, photo0_.post_id as post_id4_7_0_ from photo photo0_ where photo0_.id=?
23:58:59.211 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34451ed8]
23:58:59.211 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c1050f2]
23:58:59.213 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
23:58:59.214 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user
23:58:59.214 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f4039e]
23:58:59.214 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user.login
23:58:59.214 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : user.password
23:58:59.215 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.222 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.224 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=ru.job4j.cars.model.Car.owners)
    - Returns
       - CollectionReturnImpl(collection=ru.job4j.cars.model.Car.owners, querySpaceUid=<gen:0>, path=[ru.job4j.cars.model.Car.owners])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.Driver, querySpaceUid=<gen:1>, path=[ru.job4j.cars.model.Car.owners].<elements>)
             - EntityAttributeFetchImpl(entity=ru.job4j.cars.model.User, querySpaceUid=<gen:2>, path=[ru.job4j.cars.model.Car.owners].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ru.job4j.cars.model.Car.owners)
          - SQL table alias mapping - owners0_
          - alias suffix - 0_
          - suffixed key columns - {car_id1_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.job4j.cars.model.Driver)
                - SQL table alias mapping - driver1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.job4j.cars.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

23:58:59.227 [main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection ru.job4j.cars.model.Car.owners: select owners0_.car_id as car_id1_5_0_, owners0_.driver_id as driver_i2_5_0_, driver1_.id as id1_3_1_, driver1_.name as name2_3_1_, driver1_.user_id as user_id3_3_1_, user2_.id as id1_1_2_, user2_.login as login2_1_2_, user2_.password as password3_1_2_ from history_owner owners0_ inner join driver driver1_ on owners0_.driver_id=driver1_.id left outer join auto_user user2_ on driver1_.user_id=user2_.id where owners0_.car_id=?
23:58:59.228 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58324c9f]
23:58:59.228 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d7d8613]
23:58:59.228 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : fileName
23:58:59.228 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
23:58:59.228 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : postId
23:58:59.228 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.230 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.231 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=ru.job4j.cars.model.Post.photos)
    - Returns
       - CollectionReturnImpl(collection=ru.job4j.cars.model.Post.photos, querySpaceUid=<gen:0>, path=[ru.job4j.cars.model.Post.photos])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.Photo, querySpaceUid=<gen:1>, path=[ru.job4j.cars.model.Post.photos].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ru.job4j.cars.model.Post.photos)
          - SQL table alias mapping - photos0_
          - alias suffix - 0_
          - suffixed key columns - {post_id4_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_7_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.job4j.cars.model.Photo)
                - SQL table alias mapping - photos0_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

23:58:59.231 [main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection ru.job4j.cars.model.Post.photos: select photos0_.post_id as post_id4_7_0_, photos0_.id as id1_7_0_, photos0_.id as id1_7_1_, photos0_.file_name as file_nam2_7_1_, photos0_.name as name3_7_1_, photos0_.post_id as post_id4_7_1_ from photo photos0_ where photos0_.post_id=?
23:58:59.232 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42507640]
23:58:59.232 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dfe8b37]
23:58:59.232 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : login
23:58:59.232 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
23:58:59.232 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
23:58:59.232 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
23:58:59.233 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=ru.job4j.cars.model.Post.participates)
    - Returns
       - CollectionReturnImpl(collection=ru.job4j.cars.model.Post.participates, querySpaceUid=<gen:0>, path=[ru.job4j.cars.model.Post.participates])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ru.job4j.cars.model.User, querySpaceUid=<gen:1>, path=[ru.job4j.cars.model.Post.participates].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ru.job4j.cars.model.Post.participates)
          - SQL table alias mapping - participat0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.job4j.cars.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

23:58:59.233 [main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection ru.job4j.cars.model.Post.participates: select participat0_.post_id as post_id1_6_0_, participat0_.user_id as user_id2_6_0_, user1_.id as id1_1_1_, user1_.login as login2_1_1_, user1_.password as password3_1_1_ from participates participat0_ inner join auto_user user1_ on participat0_.user_id=user1_.id where participat0_.post_id=?
23:58:59.251 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.251 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.252 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.252 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.252 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.253 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.253 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?, ?)
23:58:59.253 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?, ?)
23:58:59.254 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?, ?)
23:58:59.254 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?, ?)
23:58:59.254 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?, ?)
23:58:59.254 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?, ?)
23:58:59.255 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id in (?, ?)
23:58:59.255 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader - Static select for one-to-many ru.job4j.cars.model.Post.priceHistories: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id=?
23:58:59.333 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No schema actions specified
23:58:59.333 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
23:58:59.340 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
23:58:59.340 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
23:58:59.349 [main] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
23:58:59.363 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7573b9ee
23:58:59.365 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 74705976-d4bb-4d6d-bfe8-1bfd97396662 (<unnamed>)
23:58:59.366 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
23:58:59.610 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
23:58:59.625 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:58:59.626 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:58:59.651 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79d7035
23:58:59.705 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from ru.job4j.cars.model.User
23:58:59.713 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:58:59.733 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'ru'
                |  |  |  \-[IDENT] Node: 'job4j'
                |  |  \-[IDENT] Node: 'cars'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'User'

23:58:59.774 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:58:59.801 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.User (<no alias>) -> user0_
23:58:59.802 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:58:59.802 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} auto_user user0_ ) )
23:58:59.813 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
23:58:59.821 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [auto_user]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.User)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

23:58:59.827 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_user user0_]
23:58:59.828 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:58:59.829 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=auto_user,tableAlias=user0_,origin=null,columns={,className=ru.job4j.cars.model.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.login as login2_1_, user0_.password as password3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'auto_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=auto_user,tableAlias=user0_,origin=null,columns={,className=ru.job4j.cars.model.User}}

23:58:59.829 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:58:59.842 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from ru.job4j.cars.model.User
23:58:59.843 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.login as login2_1_, user0_.password as password3_1_ from auto_user user0_
23:58:59.843 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:58:59.879 [main] DEBUG org.hibernate.SQL - select user0_.id as id1_1_, user0_.login as login2_1_, user0_.password as password3_1_ from auto_user user0_
Hibernate: select user0_.id as id1_1_, user0_.login as login2_1_, user0_.password as password3_1_ from auto_user user0_
23:58:59.953 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:58:59.960 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.User#1]
23:58:59.974 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:58:59.974 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.User#2]
23:58:59.974 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:58:59.974 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.User#3]
23:58:59.979 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#1]
23:58:59.981 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Ivanov
23:58:59.981 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:58:59.981 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:58:59.981 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#1]
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#2]
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Petrov
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#2]
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#3]
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Sidorov
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:58:59.984 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#3]
23:59:00.016 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.017 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.033 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.046 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
23:59:00.046 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
23:59:00.051 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.051 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=2, login=Petrov}
23:59:00.052 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=3, login=Sidorov}
23:59:00.052 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.057 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.057 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.081 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.082 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.084 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from ru.job4j.cars.model.Car i left join fetch i.owners order by i.id
23:59:00.086 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.088 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'ru'
    |     |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |     |  |  |  |  \-[IDENT] Node: 'cars'
    |     |  |  |  \-[IDENT] Node: 'model'
    |     |  |  \-[IDENT] Node: 'Car'
    |     |  \-[ALIAS] Node: 'i'
    |     \-[JOIN] Node: 'join'
    |        +-[LEFT] Node: 'left'
    |        +-[FETCH] Node: 'fetch'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'i'
    |           \-[IDENT] Node: 'owners'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.088 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.089 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Car (i) -> car0_
23:59:00.090 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> car0_.id
23:59:00.094 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : owners -> org.hibernate.type.SetType(ru.job4j.cars.model.Car.owners)
23:59:00.095 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = i.owners role = ru.job4j.cars.model.Car.owners associatedEntityName = ru.job4j.cars.model.Driver
23:59:00.097 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Driver (<no alias>) -> driver2_
23:59:00.097 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.owners -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=driver,tableAlias=driver2_,origin=car car0_,columns={car0_.id,className=ru.job4j.cars.model.Driver}}
23:59:00.097 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.owners : history_owner driver2_
23:59:00.097 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.owners -> .
23:59:00.098 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'history_owner driver2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver2_,origin=car car0_,columns={car0_.id,className=ru.job4j.cars.model.Driver}}

23:59:00.099 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> car0_.id
23:59:00.099 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.100 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> car0_.id
23:59:00.100 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.100 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} ( car car0_ history_owner driver2_ ) ) ( order ( car0_.id car0_.id id ) ) )
23:59:00.101 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
23:59:00.102 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Car): [car]
    | referencedTables(entity Driver): [driver]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Car)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Driver)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Car)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Car)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.103 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [car car0_]
23:59:00.103 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join history_owner owners1_ on car0_.id=owners1_.car_id left outer join driver driver2_ on owners1_.driver_id=driver2_.id]
23:59:00.103 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.104 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (driver,car,history_owner)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'car0_.id as id1_2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=car,tableAlias=car0_,origin=null,columns={,className=ru.job4j.cars.model.Car}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'driver2_.id as id1_3_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver2_,origin=car car0_,columns={car0_.id,className=ru.job4j.cars.model.Driver}}}
    |  +-[SQL_TOKEN] SqlFragment: 'car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'driver2_.name as name2_3_1_, driver2_.user_id as user_id3_3_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'owners1_.car_id as car_id1_5_0__, owners1_.driver_id as driver_i2_5_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[driver2_, car0_], fromElementsByPath=[i.owners], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'car car0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=car,tableAlias=car0_,origin=null,columns={,className=ru.job4j.cars.model.Car}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join history_owner owners1_ on car0_.id=owners1_.car_id left outer join driver driver2_ on owners1_.driver_id=driver2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver2_,origin=car car0_,columns={car0_.id,className=ru.job4j.cars.model.Driver}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'car0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=car0_,className=ru.job4j.cars.model.Car,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'car0_.id' {alias=i, className=ru.job4j.cars.model.Car, tableAlias=car0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.105 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.105 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from ru.job4j.cars.model.Car i left join fetch i.owners order by i.id
23:59:00.105 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select car0_.id as id1_2_0_, driver2_.id as id1_3_1_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, driver2_.name as name2_3_1_, driver2_.user_id as user_id3_3_1_, owners1_.car_id as car_id1_5_0__, owners1_.driver_id as driver_i2_5_0__ from car car0_ left outer join history_owner owners1_ on car0_.id=owners1_.car_id left outer join driver driver2_ on owners1_.driver_id=driver2_.id order by car0_.id
23:59:00.105 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.106 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, driver2_.id as id1_3_1_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, driver2_.name as name2_3_1_, driver2_.user_id as user_id3_3_1_, owners1_.car_id as car_id1_5_0__, owners1_.driver_id as driver_i2_5_0__ from car car0_ left outer join history_owner owners1_ on car0_.id=owners1_.car_id left outer join driver driver2_ on owners1_.driver_id=driver2_.id order by car0_.id
Hibernate: select car0_.id as id1_2_0_, driver2_.id as id1_3_1_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, driver2_.name as name2_3_1_, driver2_.user_id as user_id3_3_1_, owners1_.car_id as car_id1_5_0__, owners1_.driver_id as driver_i2_5_0__ from car car0_ left outer join history_owner owners1_ on car0_.id=owners1_.car_id left outer join driver driver2_ on owners1_.driver_id=driver2_.id order by car0_.id
23:59:00.111 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.112 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Car#1], null
23:59:00.112 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#1]
23:59:00.128 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.128 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Car#2], null
23:59:00.129 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#2]
23:59:00.129 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#1]
23:59:00.129 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 1
23:59:00.129 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.139 [main] DEBUG org.hibernate.SQL - select engine0_.id as id1_4_0_, engine0_.name as name2_4_0_ from engine engine0_ where engine0_.id=?
Hibernate: select engine0_.id as id1_4_0_, engine0_.name as name2_4_0_ from engine engine0_ where engine0_.id=?
23:59:00.149 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.150 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#1]
23:59:00.151 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g64
23:59:00.151 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.151 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#1]
23:59:00.152 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Engine#1
23:59:00.152 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi airtrack
23:59:00.152 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.152 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.153 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.153 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#1]
23:59:00.153 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#2]
23:59:00.153 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 3
23:59:00.154 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.154 [main] DEBUG org.hibernate.SQL - select engine0_.id as id1_4_0_, engine0_.name as name2_4_0_ from engine engine0_ where engine0_.id=?
Hibernate: select engine0_.id as id1_4_0_, engine0_.name as name2_4_0_ from engine engine0_ where engine0_.id=?
23:59:00.155 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#3]
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g63t
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#3]
23:59:00.155 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Engine#3
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi galant
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.155 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#2]
23:59:00.156 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Car.owners
23:59:00.160 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#2]
23:59:00.160 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#1]
23:59:00.160 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Car.owners
23:59:00.161 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.161 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.161 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.170 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.170 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.170 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
23:59:00.170 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
23:59:00.170 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.171 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.172 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.172 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.172 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.172 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.172 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.176 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.177 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.178 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from ru.job4j.cars.model.Post i left join fetch i.photos where i.photos.size>0
23:59:00.179 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.180 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'ru'
    |     |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |     |  |  |  |  \-[IDENT] Node: 'cars'
    |     |  |  |  \-[IDENT] Node: 'model'
    |     |  |  \-[IDENT] Node: 'Post'
    |     |  \-[ALIAS] Node: 'i'
    |     \-[JOIN] Node: 'join'
    |        +-[LEFT] Node: 'left'
    |        +-[FETCH] Node: 'fetch'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'i'
    |           \-[IDENT] Node: 'photos'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'i'
          |  |  \-[IDENT] Node: 'photos'
          |  \-[IDENT] Node: 'size'
          \-[NUM_INT] Node: '0'

23:59:00.180 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.181 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.181 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.183 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : photos -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.photos)
23:59:00.183 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = i.photos role = ru.job4j.cars.model.Post.photos associatedEntityName = ru.job4j.cars.model.Photo
23:59:00.183 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Photo (<no alias>) -> photos1_
23:59:00.183 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.photos -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=photo,tableAlias=photos1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.Photo}}
23:59:00.183 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.photos : photo photos1_
23:59:00.183 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.photos -> .
23:59:00.184 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'photo photos1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.photos,tableName=photo,tableAlias=photos1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.Photo}}

23:59:00.187 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.187 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : photos -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.photos)
23:59:00.191 [main] WARN org.hibernate.orm.deprecation - HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [i.photos.size]; use collection function syntax instead [size(i.photos)].
23:59:00.191 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = i.photos role = ru.job4j.cars.model.Post.photos associatedEntityName = ru.job4j.cars.model.Photo
23:59:00.191 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Photo (<no alias>) -> photos2_
23:59:00.192 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.photos -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=photo,tableAlias=photos2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.Photo}}
23:59:00.192 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.photos : photo photos2_
23:59:00.192 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.photos -> .
23:59:00.192 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : size -> org.hibernate.type.IntegerType@b93aad
23:59:00.194 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementType - toColumns(photos2_,size) : subquery = select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id
23:59:00.194 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.photos.size -> (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)
23:59:00.197 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.198 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} ( auto_post post0_ photo photos1_ )  ) ( where ( > ( (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id) ( . post0_.id photos ) size ) 0 ) ) )
23:59:00.198 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
23:59:00.199 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity Photo): [photo]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Photo)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  |  \-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Photo)
          | path: i.photos.size
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Photo)
          |  | path: i.photos
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          |  |  | originalText: i
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: photos
          |  \-IdentNode
          |    persister: null
          |    originalText: size
          \-LiteralNode

23:59:00.199 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.199 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join photo photos1_ on post0_.id=photos1_.post_id]
23:59:00.200 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.200 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,photo)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'post0_.id as id1_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'photos1_.id as id1_7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.photos,tableName=photo,tableAlias=photos1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.Photo}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[i], fromElementByTableAlias=[photos2_, photos1_, post0_], fromElementsByPath=[i.photos], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |  |  \-[JOIN_FRAGMENT] FromElement: 'left outer join photo photos1_ on post0_.id=photos1_.post_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.photos,tableName=photo,tableAlias=photos1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.Photo}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.photos,tableName=photo,tableAlias=photos2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.Photo}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: '(select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)' {propertyName=size,dereferenceType=PRIMITIVE,getPropertyPath=size,path=i.photos.size,tableAlias=photos2_,className=ru.job4j.cars.model.Photo,classAlias=null}
          |  +-[DOT] DotNode: '.' {propertyName=photos,dereferenceType=COLLECTION,getPropertyPath=photos,path=i.photos,tableAlias=photos2_,className=ru.job4j.cars.model.Photo,classAlias=null}
          |  |  +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          |  |  \-[IDENT] IdentNode: 'photos' {originalText=photos}
          |  \-[IDENT] IdentNode: 'size' {originalText=size}
          \-[NUM_INT] LiteralNode: '0'

23:59:00.201 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.201 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from ru.job4j.cars.model.Post i left join fetch i.photos where i.photos.size>0
23:59:00.201 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
23:59:00.201 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.201 [main] DEBUG org.hibernate.SQL - select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
Hibernate: select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
23:59:00.212 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.212 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], EntityKey[ru.job4j.cars.model.Photo#1]
23:59:00.216 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#1]
23:59:00.219 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.219 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], EntityKey[ru.job4j.cars.model.Photo#2]
23:59:00.219 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#2]
23:59:00.219 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#1]
23:59:00.219 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 2
23:59:00.220 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.220 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
Hibernate: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:59:00.221 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.221 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#2]
23:59:00.221 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 3
23:59:00.221 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi galant
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#2]
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#3]
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g63t
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#3]
23:59:00.222 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Car#2
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2007-02-26T21:23:14.250
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.222 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.223 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.223 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.223 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.223 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.223 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.224 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell super car 1
23:59:00.224 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.224 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.224 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.224 [main] DEBUG org.hibernate.SQL - select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
Hibernate: select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
23:59:00.225 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.225 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#1]
23:59:00.225 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Ivanov
23:59:00.225 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:59:00.225 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:59:00.225 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:59:00.225 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#1]
23:59:00.226 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.User#1
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#1]
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#1]
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = photo1.jpg
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = photo 1 supercar 1
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 1
23:59:00.227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.228 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#1]
23:59:00.228 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#2]
23:59:00.228 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 1
23:59:00.228 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.228 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
Hibernate: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:59:00.229 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.230 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#1]
23:59:00.230 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 1
23:59:00.230 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.231 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi airtrack
23:59:00.231 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.231 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.231 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.231 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#1]
23:59:00.231 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#1]
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g64
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#1]
23:59:00.232 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Car#1
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2007-02-26T21:23:14.250
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.232 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell super car 2
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#2]
23:59:00.233 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#2]
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = photo2.jpg
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = photo 1 supercar 2
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 2
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.234 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#2]
23:59:00.234 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Post.photos
23:59:00.234 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#1]
23:59:00.234 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#2]
23:59:00.234 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Post.photos
23:59:00.235 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.car c left join fetch c.owners where i in :fPosts order by i.id
23:59:00.238 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.246 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'i'
    |  |  |  |  \-[IDENT] Node: 'car'
    |  |  |  \-[ALIAS] Node: 'c'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'c'
    |  |        \-[IDENT] Node: 'owners'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.246 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.247 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.247 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.248 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : car -> org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Car)
23:59:00.248 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for car in ru.job4j.cars.model.Post (c) parent = [ {null} ]
23:59:00.249 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Car (c) -> car1_
23:59:00.249 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.car -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}
23:59:00.249 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.car -> post0_.car_id
23:59:00.249 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'car car1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}

23:59:00.249 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> car1_.id
23:59:00.252 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : owners -> org.hibernate.type.SetType(ru.job4j.cars.model.Car.owners)
23:59:00.252 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = c.owners role = ru.job4j.cars.model.Car.owners associatedEntityName = ru.job4j.cars.model.Driver
23:59:00.253 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Driver (<no alias>) -> driver3_
23:59:00.253 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : c.owners -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=driver,tableAlias=driver3_,origin=car car1_,columns={car1_.id,className=ru.job4j.cars.model.Driver}}
23:59:00.253 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for c.owners : history_owner driver3_
23:59:00.253 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c.owners -> .
23:59:00.253 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'history_owner driver3_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=car car1_,columns={car1_.id,className=ru.job4j.cars.model.Driver}}

23:59:00.254 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.255 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.263 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.263 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.263 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.263 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.264 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ ( car car1_ history_owner driver3_ ) ) ) ( where ( in post0_.id ( inList ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.273 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity Car): [car]
    | referencedTables(entity Driver): [driver]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Car)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Driver)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.274 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.274 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join car car1_ on post0_.car_id=car1_.id]
23:59:00.278 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id]
23:59:00.279 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.282 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,driver,car,history_owner)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'car1_.id as id1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'driver3_.id as id1_3_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=left outer join car car1_ on post0_.car_id=car1_.id,columns={car1_.id,className=ru.job4j.cars.model.Driver}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[c, i], fromElementByTableAlias=[car1_, driver3_, post0_], fromElementsByPath=[i.car, c.owners], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join car car1_ on post0_.car_id=car1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=left outer join car car1_ on post0_.car_id=car1_.id,columns={car1_.id,className=ru.job4j.cars.model.Driver}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.282 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.283 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.car c left join fetch c.owners where i in :fPosts order by i.id
23:59:00.283 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (?) order by post0_.id
23:59:00.283 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.288 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.296 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.car c left join fetch c.owners where i in (:fPosts_0, :fPosts_1) order by i.id
23:59:00.305 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.306 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'i'
    |  |  |  |  \-[IDENT] Node: 'car'
    |  |  |  \-[ALIAS] Node: 'c'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'c'
    |  |        \-[IDENT] Node: 'owners'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_0'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts_1'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.308 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.310 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.310 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.311 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : car -> org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Car)
23:59:00.312 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for car in ru.job4j.cars.model.Post (c) parent = [ {null} ]
23:59:00.312 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Car (c) -> car1_
23:59:00.312 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.car -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}
23:59:00.312 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.car -> post0_.car_id
23:59:00.312 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'car car1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}

23:59:00.312 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> car1_.id
23:59:00.313 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : owners -> org.hibernate.type.SetType(ru.job4j.cars.model.Car.owners)
23:59:00.313 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = c.owners role = ru.job4j.cars.model.Car.owners associatedEntityName = ru.job4j.cars.model.Driver
23:59:00.313 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Driver (<no alias>) -> driver3_
23:59:00.313 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : c.owners -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=driver,tableAlias=driver3_,origin=car car1_,columns={car1_.id,className=ru.job4j.cars.model.Driver}}
23:59:00.313 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for c.owners : history_owner driver3_
23:59:00.313 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c.owners -> .
23:59:00.314 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'history_owner driver3_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=car car1_,columns={car1_.id,className=ru.job4j.cars.model.Driver}}

23:59:00.314 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.314 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.314 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.314 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.314 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.315 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.315 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ ( car car1_ history_owner driver3_ ) ) ) ( where ( in post0_.id ( inList ? ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.316 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity Car): [car]
    | referencedTables(entity Driver): [driver]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Car)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Driver)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        +-ParameterNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.316 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.316 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join car car1_ on post0_.car_id=car1_.id]
23:59:00.317 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id]
23:59:00.317 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.318 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,driver,car,history_owner)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'car1_.id as id1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'driver3_.id as id1_3_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=left outer join car car1_ on post0_.car_id=car1_.id,columns={car1_.id,className=ru.job4j.cars.model.Driver}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[c, i], fromElementByTableAlias=[car1_, driver3_, post0_], fromElementsByPath=[i.car, c.owners], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join car car1_ on post0_.car_id=car1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=left outer join car car1_ on post0_.car_id=car1_.id,columns={car1_.id,className=ru.job4j.cars.model.Driver}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_0, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_1, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.319 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.319 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.car c left join fetch c.owners where i in (:fPosts_0, :fPosts_1) order by i.id
23:59:00.319 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ?) order by post0_.id
23:59:00.319 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.319 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.328 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.328 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.328 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.328 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (uninitialized)
23:59:00.329 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.329 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.329 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (uninitialized)
23:59:00.330 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (uninitialized)
23:59:00.330 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (uninitialized)
23:59:00.330 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
23:59:00.330 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 8 collections
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=<uninitialized>, id=1}
23:59:00.331 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.332 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=<uninitialized>, id=2}
23:59:00.332 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ?) order by post0_.id
23:59:00.336 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.336 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], EntityKey[ru.job4j.cars.model.Car#2], null
23:59:00.336 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#2]
23:59:00.336 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.337 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], EntityKey[ru.job4j.cars.model.Car#1], null
23:59:00.337 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#1]
23:59:00.337 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Car.owners
23:59:00.337 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#2]
23:59:00.337 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#1]
23:59:00.337 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Car.owners
23:59:00.338 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.priceHistories where i in :fPosts order by i.id
23:59:00.339 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.340 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'i'
    |  |        \-[IDENT] Node: 'priceHistories'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.340 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.341 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.341 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.343 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : priceHistories -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.priceHistories)
23:59:00.343 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = i.priceHistories role = ru.job4j.cars.model.Post.priceHistories associatedEntityName = ru.job4j.cars.model.PriceHistory
23:59:00.343 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.PriceHistory (<no alias>) -> pricehisto1_
23:59:00.343 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.priceHistories -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}
23:59:00.343 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.priceHistories : price_history pricehisto1_
23:59:00.343 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.priceHistories -> .
23:59:00.344 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'price_history pricehisto1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}

23:59:00.344 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.344 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.344 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.345 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.345 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.345 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.345 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ price_history pricehisto1_ ) ) ( where ( in post0_.id ( inList ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.346 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity PriceHistory): [price_history]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.PriceHistory)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.346 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.346 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id]
23:59:00.346 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.347 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,price_history)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pricehisto1_.id as id1_8_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[pricehisto1_, post0_], fromElementsByPath=[i.priceHistories], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.347 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.348 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.priceHistories where i in :fPosts order by i.id
23:59:00.348 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (?) order by post0_.id
23:59:00.348 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.348 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.349 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.priceHistories where i in (:fPosts_0, :fPosts_1) order by i.id
23:59:00.351 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.352 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'i'
    |  |        \-[IDENT] Node: 'priceHistories'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_0'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts_1'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.352 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.352 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : priceHistories -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.priceHistories)
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = i.priceHistories role = ru.job4j.cars.model.Post.priceHistories associatedEntityName = ru.job4j.cars.model.PriceHistory
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.PriceHistory (<no alias>) -> pricehisto1_
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.priceHistories -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.priceHistories : price_history pricehisto1_
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.priceHistories -> .
23:59:00.353 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'price_history pricehisto1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}

23:59:00.354 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.354 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.354 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.354 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.354 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.354 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.354 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ price_history pricehisto1_ ) ) ( where ( in post0_.id ( inList ? ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.355 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity PriceHistory): [price_history]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.PriceHistory)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        +-ParameterNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.356 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.356 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id]
23:59:00.356 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.357 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,price_history)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pricehisto1_.id as id1_8_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[pricehisto1_, post0_], fromElementsByPath=[i.priceHistories], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_0, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_1, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.357 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.357 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.priceHistories where i in (:fPosts_0, :fPosts_1) order by i.id
23:59:00.357 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ?) order by post0_.id
23:59:00.357 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.357 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.358 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.358 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.358 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.358 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (uninitialized)
23:59:00.359 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.359 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.359 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (uninitialized)
23:59:00.359 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.359 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.359 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
23:59:00.359 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 8 collections
23:59:00.359 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.360 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.360 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ?) order by post0_.id
23:59:00.362 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.363 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], null
23:59:00.363 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#1]
23:59:00.363 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.363 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], null
23:59:00.363 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#2]
23:59:00.363 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.363 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#1]
23:59:00.363 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#2]
23:59:00.363 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.364 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.participates where i in :fPosts order by i.id
23:59:00.365 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.366 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'i'
    |  |        \-[IDENT] Node: 'participates'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.366 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.367 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.367 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.368 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : participates -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.participates)
23:59:00.368 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = i.participates role = ru.job4j.cars.model.Post.participates associatedEntityName = ru.job4j.cars.model.User
23:59:00.368 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.User (<no alias>) -> user2_
23:59:00.368 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.participates -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}
23:59:00.368 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.participates : participates user2_
23:59:00.368 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.participates -> .
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'participates user2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}

23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.369 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ participates user2_ ) ) ( where ( in post0_.id ( inList ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.370 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity User): [auto_user]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.User)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.370 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.371 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id]
23:59:00.371 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.372 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,participates,auto_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user2_.id as id1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'user2_.login as login2_1_1_, user2_.password as password3_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[user2_, post0_], fromElementsByPath=[i.participates], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.372 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.372 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.participates where i in :fPosts order by i.id
23:59:00.373 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (?) order by post0_.id
23:59:00.373 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.373 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.374 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.participates where i in (:fPosts_0, :fPosts_1) order by i.id
23:59:00.376 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.377 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'i'
    |  |        \-[IDENT] Node: 'participates'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_0'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts_1'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.377 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : participates -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.participates)
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = i.participates role = ru.job4j.cars.model.Post.participates associatedEntityName = ru.job4j.cars.model.User
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.User (<no alias>) -> user2_
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.participates -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.participates : participates user2_
23:59:00.378 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.participates -> .
23:59:00.379 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'participates user2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}

23:59:00.379 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.379 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.379 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.379 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.380 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.380 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.380 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ participates user2_ ) ) ( where ( in post0_.id ( inList ? ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.381 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity User): [auto_user]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.User)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        +-ParameterNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.381 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.381 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id]
23:59:00.381 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.382 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,participates,auto_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user2_.id as id1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'user2_.login as login2_1_1_, user2_.password as password3_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[user2_, post0_], fromElementsByPath=[i.participates], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_0, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_1, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.382 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.382 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.participates where i in (:fPosts_0, :fPosts_1) order by i.id
23:59:00.382 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ?) order by post0_.id
23:59:00.382 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.383 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.383 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.383 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (initialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (initialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.384 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.385 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
23:59:00.385 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 8 collections
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=[], id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=[], id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.385 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.386 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ?) order by post0_.id
23:59:00.388 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.388 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], null
23:59:00.388 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#1]
23:59:00.388 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.388 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], null
23:59:00.388 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#2]
23:59:00.388 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Post.participates
23:59:00.389 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#1]
23:59:00.389 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#2]
23:59:00.389 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Post.participates
23:59:00.389 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.389 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.389 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.389 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (initialized)
23:59:00.389 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.390 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
23:59:00.390 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 8 collections
23:59:00.390 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=[], created=2007-02-26T21:23:14.250, priceHistories=[], id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=[], created=2007-02-26T21:23:14.250, priceHistories=[], id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.391 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.392 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.392 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.393 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.393 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.403 [main] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
23:59:00.407 [main] DEBUG org.hibernate.SQL - insert into auto_post (id, car_id, created, _text, auto_user_id) values (default, ?, ?, ?, ?)
Hibernate: insert into auto_post (id, car_id, created, _text, auto_user_id) values (default, ?, ?, ?, ?)
23:59:00.421 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 11
23:59:00.421 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
23:59:00.424 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.424 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.425 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.425 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [<unreferenced>] (initialized)
23:59:00.425 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [<unreferenced>] (initialized)
23:59:00.425 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [<unreferenced>] (initialized)
23:59:00.427 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
23:59:00.427 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 3 (re)creations, 0 updates, 0 removals to 3 collections
23:59:00.427 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.427 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=[], created=2023-01-27T23:59:00.392289500, priceHistories=[], id=11, text=sell car, photos=[], user=ru.job4j.cars.model.User#1}
23:59:00.430 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Inserting collection: [ru.job4j.cars.model.Post.participates#11]
23:59:00.430 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Collection was empty
23:59:00.432 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Inserting collection: [ru.job4j.cars.model.Post.photos#11]
23:59:00.432 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Collection was empty
23:59:00.432 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Inserting collection: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.432 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Collection was empty
23:59:00.433 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.433 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.440 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.440 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.440 [main] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
23:59:00.441 [main] DEBUG org.hibernate.SQL - insert into photo (id, file_name, name, post_id) values (default, ?, ?, ?)
Hibernate: insert into photo (id, file_name, name, post_id) values (default, ?, ?, ?)
23:59:00.445 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 7
23:59:00.445 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
23:59:00.446 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.446 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.446 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.446 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
23:59:00.446 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
23:59:00.446 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.446 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.447 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.447 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.448 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.448 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.448 [main] DEBUG org.hibernate.SQL - select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
Hibernate: select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
23:59:00.450 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.450 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], EntityKey[ru.job4j.cars.model.Photo#1]
23:59:00.451 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#1]
23:59:00.451 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.451 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], EntityKey[ru.job4j.cars.model.Photo#2]
23:59:00.452 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#2]
23:59:00.452 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.452 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], EntityKey[ru.job4j.cars.model.Photo#7]
23:59:00.452 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#11]
23:59:00.452 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#1]
23:59:00.453 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 2
23:59:00.453 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.453 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
Hibernate: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:59:00.456 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#2]
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 3
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi galant
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.457 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#2]
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#3]
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g63t
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#3]
23:59:00.458 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Car#2
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2007-02-26T21:23:14.250
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.458 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.459 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.459 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell super car 1
23:59:00.459 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.459 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.459 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.459 [main] DEBUG org.hibernate.SQL - select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
Hibernate: select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
23:59:00.460 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#1]
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Ivanov
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#1]
23:59:00.461 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.User#1
23:59:00.461 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#1]
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#1]
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = photo1.jpg
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = photo 1 supercar 1
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 1
23:59:00.462 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.463 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#1]
23:59:00.463 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#2]
23:59:00.463 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 1
23:59:00.463 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.463 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
Hibernate: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:59:00.464 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#1]
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 1
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi airtrack
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.465 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#1]
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#1]
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g64
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#1]
23:59:00.466 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Car#1
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2007-02-26T21:23:14.250
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.466 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.467 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.467 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.467 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell super car 2
23:59:00.467 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.467 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.467 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#2]
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#2]
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = photo2.jpg
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = photo 1 supercar 2
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 2
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#2]
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#11]
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 1
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2023-01-27T23:59:00.392290
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.468 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.469 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell car
23:59:00.469 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.469 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#11]
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#7]
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = new_photo.jpg
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = new photo name
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 11
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.470 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#7]
23:59:00.470 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections were found in result set for role: ru.job4j.cars.model.Post.photos
23:59:00.470 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#1]
23:59:00.470 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#11]
23:59:00.471 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#2]
23:59:00.471 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections initialized for role: ru.job4j.cars.model.Post.photos
23:59:00.471 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.471 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.car c left join fetch c.owners where i in (:fPosts_0, :fPosts_1, :fPosts_2) order by i.id
23:59:00.473 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.474 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[LEFT] Node: 'left'
    |  |  |  +-[FETCH] Node: 'fetch'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'i'
    |  |  |  |  \-[IDENT] Node: 'car'
    |  |  |  \-[ALIAS] Node: 'c'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'c'
    |  |        \-[IDENT] Node: 'owners'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_0'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_1'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts_2'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.474 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.474 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.474 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.474 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : car -> org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Car)
23:59:00.474 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for car in ru.job4j.cars.model.Post (c) parent = [ {null} ]
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Car (c) -> car1_
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.car -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.car -> post0_.car_id
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'car car1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}

23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> car1_.id
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : owners -> org.hibernate.type.SetType(ru.job4j.cars.model.Car.owners)
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = c.owners role = ru.job4j.cars.model.Car.owners associatedEntityName = ru.job4j.cars.model.Driver
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Driver (<no alias>) -> driver3_
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : c.owners -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=driver,tableAlias=driver3_,origin=car car1_,columns={car1_.id,className=ru.job4j.cars.model.Driver}}
23:59:00.475 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for c.owners : history_owner driver3_
23:59:00.476 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c.owners -> .
23:59:00.478 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'history_owner driver3_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=car car1_,columns={car1_.id,className=ru.job4j.cars.model.Driver}}

23:59:00.478 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.479 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.479 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.479 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.479 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.479 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.479 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ ( car car1_ history_owner driver3_ ) ) ) ( where ( in post0_.id ( inList ? ? ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.481 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity Car): [car]
    | referencedTables(entity Driver): [driver]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Car)
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Driver)
    |  +-SqlFragment
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    |        \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        +-ParameterNode
    |        +-ParameterNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.481 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.481 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join car car1_ on post0_.car_id=car1_.id]
23:59:00.482 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id]
23:59:00.482 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.483 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,driver,car,history_owner)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'car1_.id as id1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'driver3_.id as id1_3_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=left outer join car car1_ on post0_.car_id=car1_.id,columns={car1_.id,className=ru.job4j.cars.model.Driver}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[c, i], fromElementByTableAlias=[car1_, driver3_, post0_], fromElementsByPath=[i.car, c.owners], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join car car1_ on post0_.car_id=car1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=ru.job4j.cars.model.Post.car,tableName=car,tableAlias=car1_,origin=auto_post post0_,columns={post0_.car_id,className=ru.job4j.cars.model.Car}}
    |        \-[JOIN_FRAGMENT] FromElement: 'left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Car.owners,tableName=driver,tableAlias=driver3_,origin=left outer join car car1_ on post0_.car_id=car1_.id,columns={car1_.id,className=ru.job4j.cars.model.Driver}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_0, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_1, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_2, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.484 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.484 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.car c left join fetch c.owners where i in (:fPosts_0, :fPosts_1, :fPosts_2) order by i.id
23:59:00.484 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.484 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.484 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.486 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.487 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.487 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.487 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (uninitialized)
23:59:00.488 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.488 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.488 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (uninitialized)
23:59:00.489 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (uninitialized)
23:59:00.489 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.489 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (uninitialized)
23:59:00.490 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (uninitialized)
23:59:00.490 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (uninitialized)
23:59:00.491 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.491 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.491 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.491 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.491 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=<uninitialized>, id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.491 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.492 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.492 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.492 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.492 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.493 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=<uninitialized>, id=1}
23:59:00.497 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.497 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.498 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=<uninitialized>, id=2}
23:59:00.498 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.510 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.511 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], EntityKey[ru.job4j.cars.model.Car#2], null
23:59:00.511 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#2]
23:59:00.511 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.512 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], EntityKey[ru.job4j.cars.model.Car#1], null
23:59:00.512 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#1]
23:59:00.512 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.512 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], EntityKey[ru.job4j.cars.model.Car#1], null
23:59:00.512 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#1]
23:59:00.512 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Car.owners
23:59:00.512 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#2]
23:59:00.513 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#1]
23:59:00.513 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Car.owners
23:59:00.513 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.514 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.priceHistories where i in (:fPosts_0, :fPosts_1, :fPosts_2) order by i.id
23:59:00.519 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.520 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'i'
    |  |        \-[IDENT] Node: 'priceHistories'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_0'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_1'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts_2'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.520 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.521 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.521 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : priceHistories -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.priceHistories)
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = i.priceHistories role = ru.job4j.cars.model.Post.priceHistories associatedEntityName = ru.job4j.cars.model.PriceHistory
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.PriceHistory (<no alias>) -> pricehisto1_
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.priceHistories -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.priceHistories : price_history pricehisto1_
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.priceHistories -> .
23:59:00.522 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'price_history pricehisto1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}

23:59:00.523 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.524 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.524 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.524 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ price_history pricehisto1_ ) ) ( where ( in post0_.id ( inList ? ? ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.528 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity PriceHistory): [price_history]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.PriceHistory)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        +-ParameterNode
    |        +-ParameterNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.529 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.529 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id]
23:59:00.529 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.530 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,price_history)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pricehisto1_.id as id1_8_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[pricehisto1_, post0_], fromElementsByPath=[i.priceHistories], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.priceHistories,tableName=price_history,tableAlias=pricehisto1_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.PriceHistory}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_0, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_1, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_2, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.530 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.530 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.priceHistories where i in (:fPosts_0, :fPosts_1, :fPosts_2) order by i.id
23:59:00.530 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.531 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.531 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.532 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.532 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.533 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.533 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (uninitialized)
23:59:00.534 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.534 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.534 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (uninitialized)
23:59:00.535 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (uninitialized)
23:59:00.535 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.536 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (uninitialized)
23:59:00.536 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.536 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.536 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.537 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=<uninitialized>, id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.537 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.538 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.539 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], null
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#1]
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], null
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#2]
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], null
23:59:00.540 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.540 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections were found in result set for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.540 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.540 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#1]
23:59:00.540 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#2]
23:59:00.540 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections initialized for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.541 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.541 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.participates where i in (:fPosts_0, :fPosts_1, :fPosts_2) order by i.id
23:59:00.545 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.545 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'job4j'
    |  |  |  |  |  |  \-[IDENT] Node: 'cars'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Post'
    |  |  |  \-[ALIAS] Node: 'i'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'i'
    |  |        \-[IDENT] Node: 'participates'
    |  \-[SELECT] Node: 'select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[IDENT] Node: 'i'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[IDENT] Node: 'i'
    |     \-[IN_LIST] Node: 'inList'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_0'
    |        +-[COLON] Node: ':'
    |        |  \-[IDENT] Node: 'fPosts_1'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'fPosts_2'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'i'
          \-[IDENT] Node: 'id'

23:59:00.546 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
23:59:00.546 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.Post (i) -> post0_
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : participates -> org.hibernate.type.BagType(ru.job4j.cars.model.Post.participates)
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createManyToMany() : path = i.participates role = ru.job4j.cars.model.Post.participates associatedEntityName = ru.job4j.cars.model.User
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.job4j.cars.model.User (<no alias>) -> user2_
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : i.participates -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for i.participates : participates user2_
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.participates -> .
23:59:00.547 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'participates user2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}

23:59:00.548 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.548 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.548 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i -> post0_.id
23:59:00.548 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : id -> org.hibernate.type.IntegerType@b93aad
23:59:00.548 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : i.id -> post0_.id
23:59:00.548 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
23:59:00.548 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} distinct post0_.id ) ( FromClause{level=1} ( auto_post post0_ participates user2_ ) ) ( where ( in post0_.id ( inList ? ? ? ) ) ) ( order ( post0_.id post0_.id id ) ) )
23:59:00.549 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [auto_post]
    | referencedTables(entity User): [auto_user]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |  | originalText: i
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.job4j.cars.model.User)
    |  +-SqlFragment
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-InLogicOperatorNode
    |     +-IdentNode
    |     | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
    |     | originalText: i
    |     \-SqlNode
    |        +-ParameterNode
    |        +-ParameterNode
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
         path: i.id
          +-IdentNode
          | persister: SingleTableEntityPersister(ru.job4j.cars.model.Post)
          | originalText: i
          \-IdentNode
            persister: null
            originalText: id

23:59:00.550 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [auto_post post0_]
23:59:00.550 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id]
23:59:00.550 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
23:59:00.550 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (auto_post,participates,auto_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[ALIAS_REF] IdentNode: 'post0_.id as id1_0_0_' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user2_.id as id1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}}
    |  +-[SQL_TOKEN] SqlFragment: 'post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'user2_.login as login2_1_1_, user2_.password as password3_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[i], fromElementByTableAlias=[user2_, post0_], fromElementsByPath=[i.participates], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'auto_post post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=auto_post,tableAlias=post0_,origin=null,columns={,className=ru.job4j.cars.model.Post}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=ru.job4j.cars.model.Post.participates,tableName=auto_user,tableAlias=user2_,origin=auto_post post0_,columns={post0_.id,className=ru.job4j.cars.model.User}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_0, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        +-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_1, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    |        \-[NAMED_PARAM] ParameterNode: '?' {name=fPosts_2, expectedType=org.hibernate.type.ManyToOneType(ru.job4j.cars.model.Post)}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'post0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=i.id,tableAlias=post0_,className=ru.job4j.cars.model.Post,classAlias=i}
          +-[ALIAS_REF] IdentNode: 'post0_.id' {alias=i, className=ru.job4j.cars.model.Post, tableAlias=post0_}
          \-[IDENT] IdentNode: 'id' {originalText=id}

23:59:00.550 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.551 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select distinct i from ru.job4j.cars.model.Post i left join fetch i.participates where i in (:fPosts_0, :fPosts_1, :fPosts_2) order by i.id
23:59:00.551 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.551 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
23:59:00.551 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.551 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (uninitialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.552 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.552 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.552 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=[], id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=[], id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=[], id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.553 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.553 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.556 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], null
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#1]
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], null
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#2]
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], null
23:59:00.557 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#11]
23:59:00.558 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections were found in result set for role: ru.job4j.cars.model.Post.participates
23:59:00.558 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#11]
23:59:00.558 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#1]
23:59:00.558 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#2]
23:59:00.558 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections initialized for role: ru.job4j.cars.model.Post.participates
23:59:00.558 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.558 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.558 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.558 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (initialized)
23:59:00.558 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (initialized)
23:59:00.559 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.561 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.561 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.561 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.561 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.561 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.562 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=[], created=2023-01-27T23:59:00.392290, priceHistories=[], id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.562 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.562 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.563 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.563 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.563 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=[], created=2007-02-26T21:23:14.250, priceHistories=[], id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.563 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.563 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=[], created=2007-02-26T21:23:14.250, priceHistories=[], id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.563 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.564 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.564 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.564 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.567 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.567 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.569 [main] DEBUG org.hibernate.SQL - select post0_.id as id1_0_0_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.id as id1_2_1_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, engine2_.id as id1_4_2_, engine2_.name as name2_4_2_, user3_.id as id1_1_3_, user3_.login as login2_1_3_, user3_.password as password3_1_3_ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join engine engine2_ on car1_.engine_id=engine2_.id left outer join auto_user user3_ on post0_.auto_user_id=user3_.id where post0_.id=?
Hibernate: select post0_.id as id1_0_0_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.id as id1_2_1_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, engine2_.id as id1_4_2_, engine2_.name as name2_4_2_, user3_.id as id1_1_3_, user3_.login as login2_1_3_, user3_.password as password3_1_3_ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join engine engine2_ on car1_.engine_id=engine2_.id left outer join auto_user user3_ on post0_.auto_user_id=user3_.id where post0_.id=?
23:59:00.571 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#11]
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 1
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2023-01-27T23:59:00.392290
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell car
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.572 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#11]
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#1]
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 1
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi airtrack
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#1]
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#1]
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g64
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#1]
23:59:00.574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#1]
23:59:00.574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Ivanov
23:59:00.574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:59:00.574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:59:00.574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:59:00.574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#1]
23:59:00.574 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Post#11
23:59:00.577 [main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ru.job4j.cars.model.Post.photos#11]
23:59:00.577 [main] DEBUG org.hibernate.SQL - select photos0_.post_id as post_id4_7_0_, photos0_.id as id1_7_0_, photos0_.id as id1_7_1_, photos0_.file_name as file_nam2_7_1_, photos0_.name as name3_7_1_, photos0_.post_id as post_id4_7_1_ from photo photos0_ where photos0_.post_id=?
Hibernate: select photos0_.post_id as post_id4_7_0_, photos0_.id as id1_7_0_, photos0_.id as id1_7_1_, photos0_.file_name as file_nam2_7_1_, photos0_.name as name3_7_1_, photos0_.post_id as post_id4_7_1_ from photo photos0_ where photos0_.post_id=?
23:59:00.578 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection initializer : [ru.job4j.cars.model.Post.photos#11]
23:59:00.579 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [ru.job4j.cars.model.Post.photos#11]
23:59:00.579 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#7]
23:59:00.579 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = new_photo.jpg
23:59:00.579 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.580 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = new photo name
23:59:00.580 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.580 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 11
23:59:00.580 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.580 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#7]
23:59:00.580 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: ru.job4j.cars.model.Post.photos
23:59:00.580 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#11]
23:59:00.580 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: ru.job4j.cars.model.Post.photos
23:59:00.580 [main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
23:59:00.584 [main] DEBUG org.hibernate.loader.Loader - Loading collection: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.584 [main] DEBUG org.hibernate.SQL - select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id=?
Hibernate: select pricehisto0_.auto_post_id as auto_pos5_8_1_, pricehisto0_.id as id1_8_1_, pricehisto0_.id as id1_8_0_, pricehisto0_.after as after2_8_0_, pricehisto0_.before as before3_8_0_, pricehisto0_.created as created4_8_0_ from price_history pricehisto0_ where pricehisto0_.auto_post_id=?
23:59:00.585 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.585 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.585 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.585 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.586 [main] DEBUG org.hibernate.loader.Loader - Done loading collection
23:59:00.586 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.586 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.587 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.587 [main] DEBUG org.hibernate.engine.spi.CollectionEntry - Collection dirty: [ru.job4j.cars.model.Post.photos#11]
23:59:00.587 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (uninitialized)
23:59:00.587 [main] DEBUG org.hibernate.engine.internal.Collections - Collection dereferenced: [ru.job4j.cars.model.Post.participates#11]
23:59:00.587 [main] DEBUG org.hibernate.engine.internal.Collections - Collection dereferenced: [ru.job4j.cars.model.Post.photos#11]
23:59:00.587 [main] DEBUG org.hibernate.engine.internal.Collections - Collection dereferenced: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.588 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 5 objects
23:59:00.588 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 3 removals to 4 collections
23:59:00.588 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.588 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=[], id=11, text=sell car, photos=[], user=ru.job4j.cars.model.User#1}
23:59:00.588 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=<uninitialized>, id=1}
23:59:00.588 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.588 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.588 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.590 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Deleting collection: [ru.job4j.cars.model.Post.participates#11]
23:59:00.602 [main] DEBUG org.hibernate.SQL - delete from participates where post_id=?
Hibernate: delete from participates where post_id=?
23:59:00.603 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Done deleting collection
23:59:00.605 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Deleting collection: [ru.job4j.cars.model.Post.photos#11]
23:59:00.606 [main] DEBUG org.hibernate.SQL - update photo set post_id=null where post_id=?
Hibernate: update photo set post_id=null where post_id=?
23:59:00.617 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper - could not execute statement [n/a]
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Значение NULL не разрешено для поля "POST_ID"
NULL not allowed for column "POST_ID"; SQL statement:
update photo set post_id=null where post_id=? [23502-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:508)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:365)
	at org.h2.table.Table.convertUpdateRow(Table.java:968)
	at org.h2.command.dml.SetClauseList.prepareUpdate(SetClauseList.java:140)
	at org.h2.command.dml.Update.update(Update.java:88)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.remove(AbstractCollectionPersister.java:1244)
	at org.hibernate.action.internal.CollectionRemoveAction.execute(CollectionRemoveAction.java:99)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3290)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2425)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at ru.job4j.cars.model.repository.CrudRepository.tx(CrudRepository.java:53)
	at ru.job4j.cars.model.repository.PostRepository.delete(PostRepository.java:38)
	at ru.job4j.cars.model.repository.PostRepositoryTest.whenCreateFindAllWithPhotoDelete(PostRepositoryTest.java:328)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
23:59:00.619 [main] WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 23502, SQLState: 23502
23:59:00.619 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Значение NULL не разрешено для поля "POST_ID"
NULL not allowed for column "POST_ID"; SQL statement:
update photo set post_id=null where post_id=? [23502-214]
23:59:00.621 [main] INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
23:59:00.628 [main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1411)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3290)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2425)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at ru.job4j.cars.model.repository.CrudRepository.tx(CrudRepository.java:53)
	at ru.job4j.cars.model.repository.PostRepository.delete(PostRepository.java:38)
	at ru.job4j.cars.model.repository.PostRepositoryTest.whenCreateFindAllWithPhotoDelete(PostRepositoryTest.java:328)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
23:59:00.631 [main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at ru.job4j.cars.model.repository.CrudRepository.tx(CrudRepository.java:53)
	at ru.job4j.cars.model.repository.PostRepository.delete(PostRepository.java:38)
	at ru.job4j.cars.model.repository.PostRepositoryTest.whenCreateFindAllWithPhotoDelete(PostRepositoryTest.java:328)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
23:59:00.633 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.633 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.635 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - rollback() called on an inactive transaction
23:59:00.636 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
23:59:00.636 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
23:59:00.636 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
23:59:00.636 [main] DEBUG org.hibernate.SQL - select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
Hibernate: select post0_.id as id1_0_0_, photos1_.id as id1_7_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, photos1_.file_name as file_nam2_7_1_, photos1_.name as name3_7_1_, photos1_.post_id as post_id4_7_1_, photos1_.post_id as post_id4_7_0__, photos1_.id as id1_7_0__ from auto_post post0_ left outer join photo photos1_ on post0_.id=photos1_.post_id where (select count(photos2_.post_id) from photo photos2_ where post0_.id=photos2_.post_id)>0
23:59:00.638 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.639 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], EntityKey[ru.job4j.cars.model.Photo#1]
23:59:00.639 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#1]
23:59:00.639 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.639 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], EntityKey[ru.job4j.cars.model.Photo#2]
23:59:00.640 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#2]
23:59:00.640 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.640 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], EntityKey[ru.job4j.cars.model.Photo#7]
23:59:00.640 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [ru.job4j.cars.model.Post.photos#11]
23:59:00.641 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#1]
23:59:00.641 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 2
23:59:00.641 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.641 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
Hibernate: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:59:00.642 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#2]
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 3
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi galant
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#2]
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#3]
23:59:00.642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g63t
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#3]
23:59:00.643 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Car#2
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2007-02-26T21:23:14.250
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell super car 1
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.643 [main] DEBUG org.hibernate.SQL - select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
Hibernate: select user0_.id as id1_1_0_, user0_.login as login2_1_0_, user0_.password as password3_1_0_ from auto_user user0_ where user0_.id=?
23:59:00.644 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.User#1]
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `login` : value = Ivanov
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`login`)  - enhanced for lazy-loading? - false
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `password` : value = root
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.User#1]
23:59:00.645 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.User#1
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#1]
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#1]
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = photo1.jpg
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = photo 1 supercar 1
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 1
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#1]
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#2]
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 1
23:59:00.645 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.646 [main] DEBUG org.hibernate.SQL - select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
Hibernate: select car0_.id as id1_2_0_, car0_.engine_id as engine_i3_2_0_, car0_.name as name2_2_0_, engine1_.id as id1_4_1_, engine1_.name as name2_4_1_ from car car0_ left outer join engine engine1_ on car0_.engine_id=engine1_.id where car0_.id=?
23:59:00.646 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Car#1]
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `engine` : value = 1
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`engine`)  - enhanced for lazy-loading? - false
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = mitsubishi airtrack
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `owners` : value = NOT NULL COLLECTION
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`owners`)  - enhanced for lazy-loading? - false
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Car#1]
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Engine#1]
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = 4g64
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Engine#1]
23:59:00.647 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.job4j.cars.model.Car#1
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2007-02-26T21:23:14.250
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.647 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell super car 2
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#2]
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#2]
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = photo2.jpg
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = photo 1 supercar 2
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 2
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#2]
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Post#11]
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `car` : value = 1
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`car`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `created` : value = 2023-01-27T23:59:00.392290
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`created`)  - enhanced for lazy-loading? - false
23:59:00.648 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `participates` : value = NOT NULL COLLECTION
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`participates`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `photos` : value = NOT NULL COLLECTION
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`photos`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `priceHistories` : value = NOT NULL COLLECTION
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`priceHistories`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `text` : value = sell car
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`text`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `user` : value = 1
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Post#11]
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.job4j.cars.model.Photo#7]
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `fileName` : value = new_photo.jpg
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`fileName`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = new photo name
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `postId` : value = 11
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`postId`)  - enhanced for lazy-loading? - false
23:59:00.649 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.job4j.cars.model.Photo#7]
23:59:00.649 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections were found in result set for role: ru.job4j.cars.model.Post.photos
23:59:00.649 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#1]
23:59:00.649 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#11]
23:59:00.649 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.photos#2]
23:59:00.649 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections initialized for role: ru.job4j.cars.model.Post.photos
23:59:00.650 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.650 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.650 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.650 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.650 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (uninitialized)
23:59:00.651 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.651 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=<uninitialized>, id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=<uninitialized>, id=1}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.652 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=<uninitialized>, id=2}
23:59:00.652 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, car1_.id as id1_2_1_, driver3_.id as id1_3_2_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, car1_.engine_id as engine_i3_2_1_, car1_.name as name2_2_1_, driver3_.name as name2_3_2_, driver3_.user_id as user_id3_3_2_, owners2_.car_id as car_id1_5_0__, owners2_.driver_id as driver_i2_5_0__ from auto_post post0_ left outer join car car1_ on post0_.car_id=car1_.id left outer join history_owner owners2_ on car1_.id=owners2_.car_id left outer join driver driver3_ on owners2_.driver_id=driver3_.id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], EntityKey[ru.job4j.cars.model.Car#2], null
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#2]
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], EntityKey[ru.job4j.cars.model.Car#1], null
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#1]
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], EntityKey[ru.job4j.cars.model.Car#1], null
23:59:00.655 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Car.owners#1]
23:59:00.655 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections were found in result set for role: ru.job4j.cars.model.Car.owners
23:59:00.655 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#2]
23:59:00.656 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Car.owners#1]
23:59:00.656 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 2 collections initialized for role: ru.job4j.cars.model.Car.owners
23:59:00.656 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.656 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.657 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (uninitialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (uninitialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (uninitialized)
23:59:00.658 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.659 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (uninitialized)
23:59:00.659 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.659 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.659 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.659 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.659 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.659 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.659 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=<uninitialized>, id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.659 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.659 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=<uninitialized>, id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.660 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.661 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, pricehisto1_.id as id1_8_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, pricehisto1_.after as after2_8_1_, pricehisto1_.before as before3_8_1_, pricehisto1_.created as created4_8_1_, pricehisto1_.auto_post_id as auto_pos5_8_0__, pricehisto1_.id as id1_8_0__ from auto_post post0_ left outer join price_history pricehisto1_ on post0_.id=pricehisto1_.auto_post_id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.667 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.667 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], null
23:59:00.668 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#1]
23:59:00.668 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.668 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], null
23:59:00.668 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#2]
23:59:00.668 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.668 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], null
23:59:00.669 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.669 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections were found in result set for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.669 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#11]
23:59:00.669 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#1]
23:59:00.669 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.priceHistories#2]
23:59:00.669 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections initialized for role: ru.job4j.cars.model.Post.priceHistories
23:59:00.669 [main] DEBUG org.hibernate.query.internal.QueryParameterBindingsImpl - Converting QueryParameterBinding to QueryParameterListBinding for given QueryParameter : org.hibernate.engine.query.spi.NamedParameterDescriptor@b2a9db0d
23:59:00.670 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.670 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.671 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (uninitialized)
23:59:00.671 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.671 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (initialized)
23:59:00.671 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (uninitialized)
23:59:00.672 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.672 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (initialized)
23:59:00.672 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (uninitialized)
23:59:00.672 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.672 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (initialized)
23:59:00.672 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.673 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.673 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.673 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.673 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.673 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.673 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2023-01-27T23:59:00.392290, priceHistories=[], id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=[], id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=<uninitialized>, created=2007-02-26T21:23:14.250, priceHistories=[], id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.674 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.675 [main] DEBUG org.hibernate.SQL - select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ? , ?) order by post0_.id
Hibernate: select distinct post0_.id as id1_0_0_, user2_.id as id1_1_1_, post0_.car_id as car_id4_0_0_, post0_.created as created2_0_0_, post0_._text as _text3_0_0_, post0_.auto_user_id as auto_use5_0_0_, user2_.login as login2_1_1_, user2_.password as password3_1_1_, participat1_.post_id as post_id1_6_0__, participat1_.user_id as user_id2_6_0__ from auto_post post0_ left outer join participates participat1_ on post0_.id=participat1_.post_id left outer join auto_user user2_ on participat1_.user_id=user2_.id where post0_.id in (? , ? , ?) order by post0_.id
23:59:00.684 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
23:59:00.687 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#1], null
23:59:00.688 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#1]
23:59:00.688 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
23:59:00.688 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#2], null
23:59:00.688 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#2]
23:59:00.689 [main] DEBUG org.hibernate.loader.Loader - Result set row: 2
23:59:00.689 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[ru.job4j.cars.model.Post#11], null
23:59:00.689 [main] DEBUG org.hibernate.loader.Loader - Result set contains (possibly empty) collection: [ru.job4j.cars.model.Post.participates#11]
23:59:00.689 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections were found in result set for role: ru.job4j.cars.model.Post.participates
23:59:00.689 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#11]
23:59:00.689 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#1]
23:59:00.689 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [ru.job4j.cars.model.Post.participates#2]
23:59:00.689 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 3 collections initialized for role: ru.job4j.cars.model.Post.participates
23:59:00.689 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
23:59:00.689 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
23:59:00.690 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
23:59:00.690 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#1], was: [ru.job4j.cars.model.Post.participates#1] (initialized)
23:59:00.690 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#1], was: [ru.job4j.cars.model.Post.photos#1] (initialized)
23:59:00.691 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#1], was: [ru.job4j.cars.model.Post.priceHistories#1] (initialized)
23:59:00.691 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#2], was: [ru.job4j.cars.model.Post.participates#2] (initialized)
23:59:00.691 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#2], was: [ru.job4j.cars.model.Post.photos#2] (initialized)
23:59:00.692 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#2], was: [ru.job4j.cars.model.Post.priceHistories#2] (initialized)
23:59:00.692 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.participates#11], was: [ru.job4j.cars.model.Post.participates#11] (initialized)
23:59:00.693 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.photos#11], was: [ru.job4j.cars.model.Post.photos#11] (initialized)
23:59:00.693 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Post.priceHistories#11], was: [ru.job4j.cars.model.Post.priceHistories#11] (initialized)
23:59:00.694 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#2], was: [ru.job4j.cars.model.Car.owners#2] (initialized)
23:59:00.696 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [ru.job4j.cars.model.Car.owners#1], was: [ru.job4j.cars.model.Car.owners#1] (initialized)
23:59:00.697 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
23:59:00.697 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 11 collections
23:59:00.697 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
23:59:00.697 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo2.jpg, name=photo 1 supercar 2, id=2, postId=2}
23:59:00.698 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=[], created=2023-01-27T23:59:00.392290, priceHistories=[], id=11, text=sell car, photos=[ru.job4j.cars.model.Photo#7], user=ru.job4j.cars.model.User#1}
23:59:00.698 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g63t, id=3}
23:59:00.698 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=photo1.jpg, name=photo 1 supercar 1, id=1, postId=1}
23:59:00.698 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Engine{name=4g64, id=1}
23:59:00.698 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.User{password=root, id=1, login=Ivanov}
23:59:00.699 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#2, participates=[], created=2007-02-26T21:23:14.250, priceHistories=[], id=1, text=sell super car 1, photos=[ru.job4j.cars.model.Photo#1], user=ru.job4j.cars.model.User#1}
23:59:00.699 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#1, name=mitsubishi airtrack, owners=[], id=1}
23:59:00.700 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Post{car=ru.job4j.cars.model.Car#1, participates=[], created=2007-02-26T21:23:14.250, priceHistories=[], id=2, text=sell super car 2, photos=[ru.job4j.cars.model.Photo#2], user=ru.job4j.cars.model.User#1}
23:59:00.700 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Photo{fileName=new_photo.jpg, name=new photo name, id=7, postId=11}
23:59:00.700 [main] DEBUG org.hibernate.internal.util.EntityPrinter - ru.job4j.cars.model.Car{engine=ru.job4j.cars.model.Engine#3, name=mitsubishi galant, owners=[], id=2}
23:59:00.701 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.701 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
23:59:00.714 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
23:59:00.715 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68aec50] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41eb94bc]
23:59:00.715 [main] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
23:59:00.716 [main] INFO org.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:h2:./testdb;MODE=PostgreSQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE;]
23:59:00.755 [main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries

org.opentest4j.AssertionFailedError:
Expecting:
 <3>
to be equal to:
 <2>
but was not.
Expected :2
Actual   :3
<Click to see difference>


	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at ru.job4j.cars.model.repository.PostRepositoryTest.whenCreateFindAllWithPhotoDelete(PostRepositoryTest.java:331)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)


Process finished with exit code -1
